//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18408
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
public class DamageEvent : IBattleEvent
{
	private BattleEntity mSrcEntity;
	private BattleEntity mDestEntity;
	private float mDamage;
	private float mCritDamage;

	private DamageType mDamageType;

	public DamageEvent (BattleEntity srcEntity, BattleEntity destEntity, float damage, float critDamage, DamageType damageType) 
	{
		this.mSrcEntity = srcEntity;
		this.mDestEntity = destEntity;
		this.mDamage = damage;
		this.mCritDamage = critDamage;
		this.mDamageType = damageType;
	}

	public BattleEntity srcEntity {
		get {
			return mSrcEntity;
		}
	}

	public BattleEventType eventType {
		get {
			return BattleEventType.MOVE;
		}
	}

	public DamageType damageType {
		get {
			return mDamageType;
		}
	}

	public BattleEntity destEntity {
		get {
			return mDestEntity;
		}
	}

	public float totalDamage {
		get {
			return mDamage + mCritDamage;
		}
	}

	public float damage {
		get {
			return mDamage;
		}
	}

	public float critDamage {
		get {
			return mCritDamage;
		}
	}

	public override string ToString ()
	{
		return string.Format ("[DamageEvent: srcEntity={0}, destEntity={1}, damageType={2}, totalDamage={3}, damage={4}, critDamage={5}]", 
		                      srcEntity, destEntity, TextUtils.DmgToString(damageType), totalDamage, damage, critDamage);
	}
}


