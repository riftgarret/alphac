//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18408
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using UnityEngine;
using System.Collections.Generic;

public class CombatOperation : ICombatOperation
{
	private Configuration m_Config;
	private CompositeLogic m_Result;

	private CombatOperation (Configuration config)
	{
		m_Config = config;
	}
	
	public void Execute ()
	{
		m_Result = new CompositeLogic ();

		// run against conditions
		foreach (ICombatConditionLogic condition in m_Config.conditions) {
			m_Result.Add(condition);
			condition.Execute(m_Config.src, m_Config.dest);
			if(!condition.Passes) {
				return;
			}
		}

		// run logic
		foreach (ICombatLogic logic in m_Config.logic) {
			m_Result.Add(logic);
			logic.Execute(m_Config.src, m_Config.dest);
		}
	}

	public void GenerateEvents (Queue<IBattleEvent> queue)
	{
		m_Result.GenerateEvents (m_Config.src, m_Config.dest, queue);
	}

	public  class Builder {
		Configuration mConfig = new Configuration();

		public void AddCondition(ICombatConditionLogic condition) {
			mConfig.conditions.Add (condition);
		}

		public void AddLogic(ICombatLogic logic) {
			mConfig.logic.Add (logic);
		}

		public CombatOperation Build(CombatResolver src, CombatResolver dest) {
			mConfig.src = src;
			mConfig.dest = dest;
			return new CombatOperation(mConfig);
		}
	}

	private class Configuration {
		public CombatResolver src = null;
		public CombatResolver dest = null;

		public List<ICombatConditionLogic> conditions = new List<ICombatConditionLogic>();
		public List<ICombatLogic> logic = new List<ICombatLogic>();
	}
}


