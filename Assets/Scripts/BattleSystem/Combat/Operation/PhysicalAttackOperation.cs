//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18408
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using UnityEngine;
using System.Collections.Generic;

public class PhysicalAttackOperation : ICombatOperation
{
	private CombatResolver mSrc;
	private CombatResolver mDest;
	private DamageType mDamageType;

	public PhysicalAttackOperation (CombatResolver src, CombatResolver dest)
	{
        this.mSrc = src;
        this.mDest = dest;		
	}
	
	public void Execute (List<IBattleEvent> eventList)
	{
		// check dodge before anything		        
        bool hitSuccess = CombatUtil.HitSuccess(mSrc, mDest);
		// TODO add chanceToHit increase
		// if we missed
		if(!hitSuccess) {
            eventList.Add(new DodgeEvent(mSrc.entity, mDest.entity));
            return;
		}

        // did we crit?
        bool isCrit = CombatUtil.CritSuccess(mSrc, mDest);
        DamageEvent damageEvent = CombatUtil.CalculateDamage(mSrc, mDest, isCrit);
        eventList.Add(damageEvent);

        CombatUtil.ExecuteDamage(damageEvent);			
	}
}


